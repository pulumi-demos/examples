C4Component
    title Component diagram for Simple Web Server

    Container_Boundary(ec2_instance, "EC2 Instance (myInstance) - t2.micro") {
        Component(python_server, "Python SimpleHTTPServer", "HTTP Server Process", "Built-in Python HTTP server listening on port 80<br/>Serves static files from current directory")
        Component(index_html, "index.html", "Static HTML Content", "'Hello, World!' content created by user data<br/>Primary web page served to users")
        Component(user_data_script, "User Data Script", "Instance Bootstrap", "Bash script executed on instance launch:<br/>1. Creates index.html with content<br/>2. Starts Python HTTP server in background")
        
        ComponentDb(file_system, "Root File System", "EBS gp2 Volume", "Default 8GB root volume mounted at /<br/>Contains OS, web files, and applications")
    }
    
    Container_Boundary(aws_infrastructure, "AWS Infrastructure") {
        Component(ami, "Amazon Linux 2", "Base OS Image", "Latest Amazon Linux 2 AMI<br/>Includes Python 2.7 and standard utilities")
        Component(ec2_hypervisor, "EC2 Hypervisor", "Virtualization Layer", "Manages instance lifecycle and resource allocation")
        Component(network_interface, "ENI", "Network Interface", "eth0 with public IP assignment<br/>Connected to myPublicSubnet")
    }
    
    Person(web_user, "Web User", "Accesses application via web browser from allowed IP range")
    Person(admin_user, "Admin User", "Accesses system via SSH from allowed IP range")
    
    Rel(web_user, python_server, "HTTP GET /", "TCP port 80 from allowed IP range")
    Rel(admin_user, network_interface, "SSH connection", "TCP port 22 from allowed IP range")
    Rel(python_server, index_html, "File read", "Serves static content")
    Rel_Back(python_server, web_user, "HTTP 200 OK", "Returns HTML response")
    Rel_Back(network_interface, admin_user, "SSH shell", "Remote terminal access")
    Rel(user_data_script, index_html, "File creation", "echo 'Hello, World!' > index.html")
    Rel(user_data_script, python_server, "Process start", "nohup python -m SimpleHTTPServer 80 &")
    Rel(ami, user_data_script, "Boot execution", "Cloud-init runs user data")
    Rel(file_system, index_html, "Storage", "Persistent file storage")
    Rel(ec2_hypervisor, ami, "Instance creation", "VM provisioning")
    Rel(network_interface, python_server, "Network access", "Inbound HTTP traffic")

    UpdateRelStyle(web_user, python_server, $textColor="green", $lineColor="green")
    UpdateRelStyle(admin_user, network_interface, $textColor="purple", $lineColor="purple")
    UpdateRelStyle(python_server, index_html, $textColor="blue", $lineColor="blue")
    UpdateRelStyle(user_data_script, python_server, $textColor="purple", $lineColor="purple")
    UpdateRelStyle(python_server, web_user, $textColor="orange", $lineColor="orange")
    UpdateRelStyle(network_interface, admin_user, $textColor="blue", $lineColor="blue")